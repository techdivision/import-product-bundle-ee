<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <service id="import_product_bundle.repository.sql.statement" class="TechDivision\Import\Product\Bundle\Ee\Repositories\SqlStatementRepository">
            <argument type="service" id="import.util.sql.compilers"/>
        </service>
        <service id="import_product_bundle_ee.repository.sql.statement" class="TechDivision\Import\Product\Bundle\Ee\Repositories\SqlStatementRepository">
            <argument type="service" id="import.util.sql.compilers"/>
        </service>

        <service id="import_product_bundle_ee.action.processor.sequence.product.bundle.option.create" class="TechDivision\Import\Product\Bundle\Ee\Actions\Processors\SequenceProductBundleOptionCreateProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import_product_bundle_ee.repository.sql.statement"/>
        </service>
        <service id="import_product_bundle_ee.action.processor.sequence.product.bundle.selection.create" class="TechDivision\Import\Product\Bundle\Ee\Actions\Processors\SequenceProductBundleSelectionCreateProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import_product_bundle_ee.repository.sql.statement"/>
        </service>

        <service id="import_product_bundle_ee.action.sequence.product.bundle.option" class="TechDivision\Import\Product\Bundle\Ee\Actions\SequenceProductBundleOptionAction">
            <argument type="service" id="import_product_bundle_ee.action.processor.sequence.product.bundle.option.create"/>
        </service>
        <service id="import_product_bundle_ee.action.sequence.product.bundle.selection" class="TechDivision\Import\Product\Bundle\Ee\Actions\SequenceProductBundleSelectionAction">
            <argument type="service" id="import_product_bundle_ee.action.processor.sequence.product.bundle.selection.create"/>
        </service>

        <!--  
         ! ATTENTION: We're overriding the actions from the techdivision/import-product-bundle here 
         !-->
        <service id="import_product_bundle.action.processor.product.bundle.option.create" class="TechDivision\Import\Dbal\Collection\Actions\Processors\GenericIdentifierProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import_product_bundle_ee.repository.sql.statement"/>
            <argument type="service" id="import.util.sql.sanitizers"/>
            <argument type="collection">
                <argument type="constant">TechDivision\Import\Product\Bundle\Utils\SqlStatementKeys::CREATE_PRODUCT_BUNDLE_OPTION</argument>
            </argument>
        </service>
        <service id="import_product_bundle.action.processor.product.bundle.selection.create" class="TechDivision\Import\Dbal\Collection\Actions\Processors\GenericIdentifierProcessor">
            <argument type="service" id="connection"/>
            <argument type="service" id="import_product_bundle_ee.repository.sql.statement"/>
            <argument type="service" id="import.util.sql.sanitizers"/>
            <argument type="collection">
                <argument type="constant">TechDivision\Import\Product\Bundle\Utils\SqlStatementKeys::CREATE_PRODUCT_BUNDLE_SELECTION</argument>
            </argument>
        </service>

        <service id="import_product_bundle_ee.observer.bundle.option" class="TechDivision\Import\Product\Bundle\Ee\Observers\EeBundleOptionObserver">
            <argument type="service" id="import_product_bundle.processor.product.bundle"/>
            <argument type="service" id="import_product_bundle_ee.action.sequence.product.bundle.option"/>
            <argument type="service" id="import.observer.dynamic.attribute.loader"/>
            <argument type="service" id="import_product_bundle.entity.merger.composite.option"/>
        </service>
        <service id="import_product_bundle_ee.observer.bundle.option.update" class="TechDivision\Import\Product\Bundle\Ee\Observers\EeBundleOptionUpdateObserver">
            <argument type="service" id="import_product_bundle.processor.product.bundle"/>
            <argument type="service" id="import_product_bundle_ee.action.sequence.product.bundle.option"/>
            <argument type="service" id="import.observer.dynamic.attribute.loader"/>
            <argument type="service" id="import_product_bundle.entity.merger.composite.option"/>
        </service>
        <service id="import_product_bundle_ee.observer.bundle.selection" class="TechDivision\Import\Product\Bundle\Ee\Observers\EeBundleSelectionObserver">
            <argument type="service" id="import_product_bundle.processor.product.bundle"/>
            <argument type="service" id="import_product_bundle_ee.action.sequence.product.bundle.selection"/>
            <argument type="service" id="import.observer.dynamic.attribute.loader"/>
            <argument type="service" id="import_product_bundle.entity.merger.composite.selection"/>
        </service>
        <service id="import_product_bundle_ee.observer.bundle.selection.update" class="TechDivision\Import\Product\Bundle\Ee\Observers\EeBundleSelectionUpdateObserver">
            <argument type="service" id="import_product_bundle.processor.product.bundle"/>
            <argument type="service" id="import_product_bundle_ee.action.sequence.product.bundle.selection"/>
            <argument type="service" id="import.observer.dynamic.attribute.loader"/>
            <argument type="service" id="import_product_bundle.entity.merger.composite.selection"/>
        </service>
        <service id="import_product_bundle_ee.observer.bundle.option.value" class="TechDivision\Import\Product\Bundle\Ee\Observers\EeBundleOptionValueObserver">
            <argument type="service" id="import_product_bundle.processor.product.bundle"/>
        </service>
        <service id="import_product_bundle_ee.observer.bundle.option.value.update" class="TechDivision\Import\Product\Bundle\Ee\Observers\EeBundleOptionValueUpdateObserver">
            <argument type="service" id="import_product_bundle.processor.product.bundle"/>
        </service>
        <service id="import_product_bundle_ee.observer.bundle.product.relation" class="TechDivision\Import\Product\Bundle\Ee\Observers\EeBundleProductRelationObserver">
            <argument type="service" id="import_product_bundle.processor.product.bundle"/>
        </service>
        <service id="import_product_bundle_ee.observer.bundle.product.relation.update" class="TechDivision\Import\Product\Bundle\Ee\Observers\EeBundleProductRelationUpdateObserver">
            <argument type="service" id="import_product_bundle.processor.product.bundle"/>
        </service>
        <service id="import_product_bundle_ee.observer.sku.row.id.mapping" class="TechDivision\Import\Product\Ee\Observers\GenericSkuRowIdMappingObserver">
            <argument type="service" id="import_product_ee.processor.product.bunch"/>
            <argument type="string">%import_product_bundle.param.sku.column.name%</argument>
        </service>

        <!--
         | The DI configuration for the composite observers of the replace operation.
         |-->
        <service id="import_product_bundle_ee.observer.composite.replace" class="TechDivision\Import\Observers\GenericCompositeObserver">
            <call method="addObserver">
                <argument id="import_product_bundle_ee.observer.bundle.option" type="service"/>
            </call>
            <call method="addObserver">
                <argument id="import_product_bundle_ee.observer.bundle.option.value" type="service"/>
            </call>
            <call method="addObserver">
                <argument id="import_product_bundle_ee.observer.bundle.selection" type="service"/>
            </call>
            <call method="addObserver">
                <argument id="import_product_bundle.observer.bundle.selection.price" type="service"/>
            </call>
            <call method="addObserver">
                <argument id="import_product_bundle_ee.observer.bundle.product.relation" type="service"/>
            </call>
        </service>

        <!--
         | The DI configuration for the composite observers of the add-update operation.
         |-->
        <service id="import_product_bundle_ee.observer.composite.add_update" class="TechDivision\Import\Observers\GenericCompositeObserver">
            <call method="addObserver">
                <argument id="import_product_bundle_ee.observer.sku.row.id.mapping" type="service"/>
            </call>
            <call method="addObserver">
                <argument id="import_product_bundle_ee.observer.bundle.option.update" type="service"/>
            </call>
            <call method="addObserver">
                <argument id="import_product_bundle_ee.observer.bundle.option.value.update" type="service"/>
            </call>
            <call method="addObserver">
                <argument id="import_product_bundle_ee.observer.bundle.selection.update" type="service"/>
            </call>
            <call method="addObserver">
                <argument id="import_product_bundle.observer.bundle.selection.price.update" type="service"/>
            </call>
            <call method="addObserver">
                <argument id="import_product_bundle_ee.observer.bundle.product.relation.update" type="service"/>
            </call>
        </service>

        <service id="import_product_bundle_ee.subject.bundle" class="TechDivision\Import\Product\Bundle\Ee\Subjects\EeBundleSubject" shared="false">
            <argument type="service" id="import.processor.registry"/>
            <argument type="service" id="import.generator.core.config.data.uid"/>
            <argument type="service" id="loggers"/>
            <argument type="service" id="import.events.emitter"/>
            <argument type="service" id="import_product.loader.media.roles"/>
            <argument type="service" id="import_product.utils.entity.type.code.mapping"/>
        </service>

    </services>

</container>